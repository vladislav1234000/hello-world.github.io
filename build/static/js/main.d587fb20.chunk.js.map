{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/Load.js","panels/Loaddd.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","left","onClick","data-to","title","before","photo_200","src","description","city","first_name","last_name","style","paddingTop","paddingBottom","color","stretched","mode","size","level","align","Persik","osName","platform","Load","props","IOS","Loaddd","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d587fb20.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n        \t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"load\">\n\t\t\t\t{<Icon28SettingsOutline/>}\n\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tО сервисе\n\t\t</PanelHeader>\n\t\t\t\t{fetchedUser &&\n\t\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>}\n\t\t\t<Div style={{ paddingTop: 20, paddingBottom: 0, color: 'grey' }}>\n\t\t\t\t\tВ приложении \"ВКонтакте\" есть множество самых различних сервисов, с самыми разными функциями. Наш сервис отличается тем, что его создаёте именно вы.\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t      Каждый пользователь \"ВКонтакте\" может предложить свою идею для нового раздела / новой функции и мы попытаемся реализовать её.\n\t\t\t\t\t</Div>\n\t\n\t\t\t    <Group title=\"Navigation Example\">\n\t\t\t\t<Div>\n\t\t\t\t<Button stretched mode=\"commerce\" size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\tЧтобы узнать подробнее, нажми сюда ↓\n\t\t\t  <br/>\n\t\t\t  <br/>\n\t\t\t  <Button size=\"xl\" level=\"2\" onClick={go}>\n              Помочь с созднием сервиса\n             </Button>\n            </Button>\n\t\t\t<br/>\n\t\t\t<Button stretched mode=\"outline\" size=\"xl\" level=\"2\" onClick={go} data-to=\"loaddd\">\n\t\t\t Поделиться сервисом с друзьями\n            </Button>\n\t\t\t<p align=\"center\"><Button mode=\"tertiary\" >Версия 1.0 (Beta)</Button></p>\n\t\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t</Panel>\n\t\n\t\n\t);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tany: PropTypes.func,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\n\nconst Persik = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n        \t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{<Icon28ArrowLeftOutline/>}\n\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tПомочь с созданием\n\t\t</PanelHeader>\n\t\t\t\t{fetchedUser &&\n\t\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>}\n\t\t\t<Div style={{ paddingTop: 20, paddingBottom: 0, color: 'grey' }}>\n\t\t\tВсем пользователям мы даём возможность предложить свою идею для нового раздела / новой функции, которого(ю) мы попаемся попытаемся реальзовать в нашем сервисе\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t      Каждый пользователь \"ВКонтакте\" может предложить свою идею для нового раздела / новой функции и мы попытаемся реализовать её.\n\t\t\t\t\t</Div>\n\t\t</Panel>\n\t\n\t\n\t);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tany: PropTypes.func,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon56DoNotDisturbOutline from '@vkontakte/icons/dist/56/do_not_disturb_outline';\n\nconst osName = platform();\n\nconst Load = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tНастройки\n\t\t</PanelHeader>  \n        <Panel style={{ paddingTop: 20, paddingBottom: 0, color: 'grey' }}>\n        <div align=\"center\"> {<Icon56DoNotDisturbOutline/>}</div>\n        <br/>\n        <div align=\"center\">Данный раздел пока находится в разработке!</div>\n        </Panel>\n\t</Panel>\n);\n\nLoad.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Load;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Icon56HistoryOutline from '@vkontakte/icons/dist/56/history_outline';\n\nconst Loaddd = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n        \t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{<Icon28ArrowLeftOutline/>}\n\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t Готовые функции\n\t\t</PanelHeader>\n\t\t\t\t{fetchedUser &&\n\t\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>}\n\t\t\t<Div style={{ paddingTop: 20, paddingBottom: 0, color: 'grey' }}>\n\t\t\t<div align=\"center\"> {<Icon56HistoryOutline/>}</div>\n            <br/>\n\t\t\t<div align=\"center\">Скоро тут что-то появится</div>\n\t\t\t\t\t</Div>\n\t\n\t\t\t    <Group title=\"Navigation Example\">\n\t\t\t\t<Div>\n\t\t\t  <Button stretched mode=\"commerce\" size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n              Исправить это недоразумение\n             </Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t</Panel>\n\t\n\t\n\t);\n\nLoaddd.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tany: PropTypes.func,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Loaddd;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Load from './panels/Load';\nimport Loaddd from './panels/Loaddd';\n\nconst App = () => {\n const [activePanel, setActivePanel] = useState('home');\n const [fetchedUser, setUser] = useState(null);\n const [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t<Load id=\"load\" go={go}/>\n\t\t\t<Loaddd id=\"loaddd\" go={go}/>\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}